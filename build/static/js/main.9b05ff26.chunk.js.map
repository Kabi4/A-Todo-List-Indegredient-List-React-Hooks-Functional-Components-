{"version":3,"sources":["components/UI/Card.js","components/UI/LoadingIndicator.js","components/Ingredients/IngredientForm.js","components/Ingredients/IngredientList.js","components/Ingredients/Search.js","components/UI/ErrorModal.js","components/Ingredients/Ingredients.js","App.js","index.js"],"names":["Card","props","className","children","LoadingIndicator","IngredientForm","React","memo","useState","inputName","setInputName","inputAmount","setinputAmount","onSubmit","event","preventDefault","addItem","title","amount","htmlFor","value","onChange","e","target","type","id","disabled","loading","IngredientList","ingredients","map","ig","key","onClick","onRemoveItem","bind","style","color","Search","updateingredientList","startfetching","error","searchInput","setsearchInput","inputRef","useRef","useEffect","timer","setTimeout","current","query","length","fetch","then","res","json","fetchedIndegridents","push","catch","err","console","log","message","clearTimeout","ref","ErrorModal","Fragment","onClose","Ingredients","ingredientList","setingredientList","isLoading","setisLoading","setErr","setFilterIndegredents","useCallback","filteredIndegredent","startingFetchingIndegredient","setError","newItem","method","body","JSON","stringify","headers","prevState","name","replace","index","findIndex","ele","newState","splice","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b05ff26.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return <div className=\"card\">{props.children}</div>;\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './LoadingIndicator.css';\n\nconst LoadingIndicator = () => (\n  <div className=\"lds-ring\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default LoadingIndicator;\n","import React,{useState} from 'react';\n\nimport Card from '../UI/Card';\nimport LoadingIndicator from '../UI/LoadingIndicator';\nimport './IngredientForm.css';\n\nconst IngredientForm = React.memo(props => {\n  const [inputName, setInputName] = useState(\"\");\n  const [inputAmount, setinputAmount] = useState(0);\n\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.addItem({title: inputName,amount: inputAmount});\n    setInputName(\"\");\n    setinputAmount(0);\n  };\n\n  return (\n    <section className=\"ingredient-form\">\n      <Card>\n        <form onSubmit={submitHandler}>\n          <div className=\"form-control\">\n            <label htmlFor=\"title\">Name</label>\n            <input value={inputName} onChange={(e)=>{setInputName(e.target.value)}} type=\"text\" id=\"title\" />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"amount\">Amount</label>\n            <input type=\"number\" onChange={(e)=>{setinputAmount(e.target.value)}} value={inputAmount} id=\"amount\" />\n          </div>\n          <div className=\"ingredient-form__actions\">\n            <button disabled={inputName===\"\"||inputAmount===0} type=\"submit\">Add Ingredient</button>\n            {props.loading?<LoadingIndicator />:null}\n          </div>\n        </form>\n      </Card>\n    </section>\n  );\n});\n\nexport default IngredientForm;\n","import React from 'react';\n\nimport './IngredientList.css';\n\nconst IngredientList = props => {\n  return (\n    <section className=\"ingredient-list\">\n      <h2>Loaded Ingredients</h2>\n      <ul>\n        {props.ingredients.map(ig => (\n          <li key={ig.id} onClick={props.onRemoveItem.bind(this, ig.id)}>\n            <span>{ig.title}</span>\n            <span><strong style={{color: \"red\"}}>X </strong>{ig.amount}</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default IngredientList;\n","import React, { useState,useEffect, useRef } from 'react';\n\nimport Card from '../UI/Card';\nimport './Search.css';\n\nconst Search = React.memo(props => {\n  const {updateingredientList,startfetching,error} = props; \n  const [searchInput, setsearchInput] = useState(\"\");\n  const inputRef = useRef();\n\n  useEffect(()=>{\n    startfetching(true);\n    const timer = setTimeout(()=>{\n      if(searchInput===inputRef.current.value){  const query = searchInput.length===0?\"\":`?orderBy=\"title\"&equalTo=\"${searchInput}\"`\n        fetch('https://indegredent-list-withhooks.firebaseio.com/ingredient.json'+query)\n          .then(res=>res.json())\n          .then(res=>{\n            const fetchedIndegridents = [];\n            for(const key in res){\n              fetchedIndegridents.push({\n                id: key,\n                title: res[key].title,\n                amount: res[key].amount\n              })\n            };\n            updateingredientList(fetchedIndegridents);\n          })\n          .catch(err=>{\n            console.log(err)\n            error(err.message);\n          })\n        }\n    },500)\n    return()=>{\n      clearTimeout(timer);\n    };\n    }\n  ,[searchInput,updateingredientList,inputRef,startfetching,error])\n\n  return (\n    <section className=\"search\">\n      <Card>\n        <div className=\"search-input\">\n          <label>Filter by Title</label>\n          <input ref={inputRef} value={searchInput} onChange={(e)=>{setsearchInput(e.target.value)}} type=\"text\" />\n        </div>\n      </Card>\n    </section>\n  );\n});\n\nexport default Search;\n","import React from 'react';\n\nimport './ErrorModal.css';\n\nconst ErrorModal = React.memo(props => {\n  return (\n    <React.Fragment>\n      <div className=\"backdrop\" onClick={props.onClose} />\n      <div className=\"error-modal\">\n        <h2>An Error Occurred!</h2>\n        <p>{props.children}</p>\n        <div className=\"error-modal__actions\">\n          <button type=\"button\" onClick={props.onClose}>\n            Okay\n          </button>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n});\n\nexport default ErrorModal;\n","import React,{useCallback, useState} from 'react';\n\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList';\nimport Search from './Search';\nimport ErrorModal from './../UI/ErrorModal';\n\nfunction Ingredients() {\n  const [ingredientList, setingredientList] = useState([]);\n  const [isLoading, setisLoading] = useState(false);\n  const [err,setErr] = useState(null);\n\n  const addIngredientHandler = (newItem)=>{\n    setisLoading(true);\n    fetch('https://indegredent-list-withhooks.firebaseio.com/ingredient.json',{\n      method: \"POST\",\n      body: JSON.stringify(newItem),\n      headers: { 'Content-Type': 'application/json'}\n    })\n    .then(res=>{\n      return res.json();\n    })\n    .then(res=>{\n      setisLoading(false);\n      setingredientList(prevState=>[...prevState,{id: res.name,...newItem}]);\n    })\n    .catch(err=>{\n      setError(err.message.replace(/_/g,\"\"));\n    })\n  }\n\n  const removeIngredientHandler = (id)=>{\n    setisLoading(true);\n    fetch(`https://indegredent-list-withhooks.firebaseio.com/ingredient/${id}.json`,{\n      method: \"DELETE\"\n    })\n    .then(res=>{\n      setisLoading(false);\n      setingredientList(prevState=>{\n        let index = prevState.findIndex(ele=>ele.id===id);\n        let newState = [...prevState];\n        if(index>=0){\n          newState.splice(index,1);\n        }\n        return newState;\n      })\n    })\n    .catch(err=>{\n      setError(err.message.replace(/_/g,\"\"));\n    })\n  };\n\n  const setFilterIndegredents = useCallback(filteredIndegredent=>{\n    setingredientList(filteredIndegredent);\n    setisLoading(false);\n  },[])\n\n  const startingFetchingIndegredient = useCallback(()=>{\n    setisLoading(true);\n  },[]);\n\n  const clearError = ()=>{\n    setErr(null);\n  }\n\n  const setError = useCallback((message)=>{\n    setErr(message);\n    setisLoading(false);\n  },[]);\n\n  return (\n    <div className=\"App\">\n      {err && <ErrorModal onClose={clearError} >{err}</ErrorModal>}\n      <IngredientForm loading={isLoading} addItem = {addIngredientHandler} />\n\n      <section>\n        <Search  error={setError} startfetching={startingFetchingIndegredient} updateingredientList={setFilterIndegredents} />\n        <IngredientList onRemoveItem={removeIngredientHandler} ingredients={ingredientList}/>\n      </section>\n    </div>\n  );\n}\n\nexport default Ingredients;\n","import React from 'react';\n\nimport Ingredients from './components/Ingredients/Ingredients';\n\nconst App = props => {\n  return <Ingredients />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}